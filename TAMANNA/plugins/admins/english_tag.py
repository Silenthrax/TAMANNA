from TAMANNA import app 
import asyncio
import random
from pyrogram import Client, filters
from pyrogram.enums import ChatType, ChatMemberStatus
from pyrogram.errors import UserNotParticipant
from pyrogram.types import ChatPermissions

spam_chats = []

EMOJI = [ "ЁЯжЛЁЯжЛЁЯжЛЁЯжЛЁЯжЛ",
          "ЁЯзЪЁЯМ╕ЁЯзЛЁЯНмЁЯлЦ",
          "ЁЯеАЁЯМ╖ЁЯМ╣ЁЯМ║ЁЯТР",
          "ЁЯМ╕ЁЯМ┐ЁЯТоЁЯМ▒ЁЯМ╡",
          "тЭдя╕ПЁЯТЪЁЯТЩЁЯТЬЁЯЦд",
          "ЁЯТУЁЯТХЁЯТЮЁЯТЧЁЯТЦ",
          "ЁЯМ╕ЁЯТРЁЯМ║ЁЯМ╣ЁЯжЛ",
          "ЁЯНФЁЯжкЁЯНЫЁЯН▓ЁЯеЧ",
          "ЁЯНОЁЯНУЁЯНТЁЯНСЁЯМ╢я╕П",
          "ЁЯзЛЁЯедЁЯзЛЁЯеЫЁЯН╖",
          "ЁЯНмЁЯНнЁЯзБЁЯОВЁЯНб",
          "ЁЯНиЁЯзЙЁЯН║тШХЁЯН╗",
          "ЁЯекЁЯезЁЯНжЁЯНеЁЯНЪ",
          "ЁЯлЦтШХЁЯН╣ЁЯН╖ЁЯеЫ",
          "тШХЁЯзГЁЯНйЁЯНжЁЯНЩ",
          "ЁЯНБЁЯМ╛ЁЯТоЁЯНВЁЯМ┐",
          "ЁЯМия╕ПЁЯМея╕ПтЫИя╕ПЁЯМйя╕ПЁЯМзя╕П",
          "ЁЯМ╖ЁЯП╡я╕ПЁЯМ╕ЁЯМ║ЁЯТР",
          "ЁЯТоЁЯМ╝ЁЯМ╗ЁЯНАЁЯНБ",
          "ЁЯзЯЁЯж╕ЁЯж╣ЁЯзЩЁЯС╕",
          "ЁЯзЕЁЯНаЁЯеХЁЯМ╜ЁЯеж",
          "ЁЯР╖ЁЯР╣ЁЯРнЁЯРиЁЯР╗тАНтЭДя╕П",
          "ЁЯжЛЁЯРЗЁЯРАЁЯРИЁЯРИтАНтмЫ",
          "ЁЯМ╝ЁЯМ│ЁЯМ▓ЁЯМ┤ЁЯМ╡",
          "ЁЯейЁЯНЛЁЯНРЁЯНИЁЯНЗ",
          "ЁЯН┤ЁЯН╜я╕ПЁЯФкЁЯН╢ЁЯеГ",
          "ЁЯХМЁЯП░ЁЯПйтЫйя╕ПЁЯПй",
          "ЁЯОЙЁЯОКЁЯОИЁЯОВЁЯОА",
          "ЁЯк┤ЁЯМ╡ЁЯМ┤ЁЯМ│ЁЯМ▓",
          "ЁЯОДЁЯОЛЁЯОНЁЯОСЁЯОО",
          "ЁЯжЕЁЯжЬЁЯХКя╕ПЁЯждЁЯжв",
          "ЁЯждЁЯжйЁЯжЪЁЯжГЁЯжЖ",
          "ЁЯРмЁЯжнЁЯжИЁЯРЛЁЯР│",
          "ЁЯРФЁЯРЯЁЯРаЁЯРбЁЯжР",
          "ЁЯжйЁЯжАЁЯжСЁЯРЩЁЯжк",
          "ЁЯРжЁЯжВЁЯХ╖я╕ПЁЯХ╕я╕ПЁЯРЪ",
          "ЁЯекЁЯН░ЁЯезЁЯНиЁЯНи",
          " ЁЯемЁЯНЙЁЯзБЁЯзЗ",
        ]

TAGMES = [ " **тА╗ ╔к ╩Яс┤Пс┤ас┤З ╩Пс┤Пс┤Ь...с░ФсйЪ**",
           " **тА╗ ╥Ус┤П╩А╔вс┤Зс┤Ы с┤Нс┤З..с░ФсйЪ",
           " **тА╗ ╔к с┤Ес┤П╔┤'с┤Ы ╩Яс┤Пс┤ас┤З ╩Пс┤Пс┤Ь...с░ФсйЪ**",
           " **тА╗ с┤Нс┤Ас┤Лс┤З ╔кс┤Ы ╩Пс┤Пс┤Ь╩Аs с┤Ш╔к╩Пс┤А, с┤Нс┤Ас┤Лс┤З ╔кс┤Ы ╩Пс┤Пс┤Ь╩Аs...с░ФсйЪ**",
           " **тА╗ с┤Кс┤П╔к╔┤ с┤Н╩П ╔в╩Ас┤Пс┤Ьс┤Ш с┤А╩Яsс┤П...с░ФсйЪ**",
           " **тА╗ ╔к с┤Лс┤Зс┤Шс┤Ы ╩Пс┤Пс┤Ь╩А ╔┤с┤Ас┤Нс┤З ╔к╔┤ с┤Н╩П ╩Ьс┤Зс┤А╩Ас┤Ы...с░ФсйЪ**",
           " **тА╗ с┤б╩Ьс┤З╩Ас┤З с┤А╩Ас┤З с┤А╩Я╩Я ╩Пс┤Пс┤Ь╩А ╥У╩А╔кс┤З╔┤с┤Еs...с░ФсйЪ**",
           " **тА╗ ╔к╔┤ с┤б╩Ьс┤Пsс┤З с┤Нс┤Зс┤Нс┤П╩А╩П с┤А╩Ас┤З ╩Пс┤Пс┤Ь ╩Яс┤Пsс┤Ы с┤Н╩П ╩Яс┤Пс┤ас┤З...с░ФсйЪ**",
           " **тА╗ с┤б╩Ьс┤Ас┤Ыs ╩Пс┤Пс┤Ь╩А с┤Ш╩Ас┤П╥Ус┤Зss╔кс┤П╔┤...с░ФсйЪ**",
           " **тА╗ с┤б╩Ьс┤З╩Ас┤З с┤Е╔кс┤Е ╩Пс┤Пс┤Ь ╩Я╔кс┤ас┤З...с░ФсйЪ**",
           " **тА╗ ╔вс┤Пс┤Пс┤Е с┤Нс┤П╩А╔┤╔к╔┤╔в, ╩Щс┤А╩Щ╩П...с░ФсйЪ**",
           " **тА╗ ╔вс┤Пс┤Пс┤Е ╔┤╔к╔в╩Ьс┤Ы, ╔кс┤Ы's с┤ас┤З╩А╩П ╩Яс┤Ас┤Ыс┤З...с░ФсйЪ**",
           " **тА╗ ╔к ╥Ус┤Зс┤З╩Я с┤ас┤З╩А╩П sс┤Ас┤Е с┤Ыс┤Пс┤Ес┤А╩П...с░ФсйЪ**",
           " **тА╗ с┤Ыс┤А╩Яс┤Л с┤Ыс┤П с┤Нс┤З с┤Ыс┤Пс┤П...с░ФсйЪ**",
           " **тА╗ с┤б╩Ьс┤Ас┤Ы's ╥Ус┤П╩А с┤Е╔к╔┤╔┤с┤З╩А с┤Ыс┤Пс┤Ес┤А╩П...с░ФсйЪ**",
           " **тА╗ с┤б╩Ьс┤Ас┤Ы's ╔вс┤П╔к╔┤╔в с┤П╔┤...с░ФсйЪ**",
           " **тА╗ с┤б╩Ь╩П с┤Ес┤П╔┤'с┤Ы ╩Пс┤Пс┤Ь с┤Нс┤Зssс┤А╔вс┤З...с░ФсйЪ**",
           " **тА╗ ╔к с┤Ас┤Н ╔к╔┤╔┤с┤Пс┤Дс┤З╔┤с┤Ы...с░ФсйЪ**",
           " **тА╗ ╔кс┤Ы с┤бс┤Аs ╥Ус┤Ь╔┤ ╩Пс┤Зsс┤Ыс┤З╩Ас┤Ес┤А╩П, с┤бс┤Аs╔┤'с┤Ы ╔кс┤Ы...с░ФсйЪ**",
           " **тА╗ с┤б╩Ьс┤З╩Ас┤З с┤бс┤З╩Ас┤З ╩Пс┤Пс┤Ь ╩Щс┤Ьs╩П ╩Пс┤Зsс┤Ыс┤З╩Ас┤Ес┤А╩П...с░ФсйЪ**",
           " **тА╗ ╩Пс┤Пс┤Ь ╩Ас┤Зс┤Нс┤А╔к╔┤ sс┤П с┤Дс┤А╩Яс┤Н ╥У╩А╔кс┤З╔┤с┤Е...с░ФсйЪ**",
           " **тА╗ с┤Ес┤П ╩Пс┤Пс┤Ь с┤Л╔┤с┤Пс┤б ╩Ьс┤Пс┤б с┤Ыс┤П s╔к╔┤╔в, s╔к╔┤╔в...с░ФсйЪ**",
           " **тА╗ с┤б╔к╩Я╩Я ╩Пс┤Пс┤Ь с┤Дс┤Пс┤Нс┤З ╥Ус┤П╩А с┤А с┤бс┤А╩Яс┤Л с┤б╔кс┤Ы╩Ь с┤Нс┤З...с░ФсйЪ**",
           " **тА╗ с┤А╩Яс┤бс┤А╩Пs ╩Щс┤З ╩Ьс┤Ас┤Шс┤Ш╩П ╥У╩А╔кс┤З╔┤с┤Е...с░ФсйЪ**",
           " **тА╗ с┤Дс┤А╔┤ с┤бс┤З ╩Щс┤З ╥У╩А╔кс┤З╔┤с┤Еs...с░ФсйЪ**",
           " **тА╗ с┤А╩Ас┤З ╩Пс┤Пс┤Ь с┤Нс┤А╩А╩А╔кс┤Зс┤Е...с░ФсйЪ**",
           " **тА╗ с┤б╩Ьс┤З╩Ас┤З ╩Ьс┤Ас┤ас┤З ╩Пс┤Пс┤Ь ╩Щс┤Зс┤З╔┤ ╩Щс┤Ьs╩П ╥Ус┤П╩А sс┤П с┤Нс┤А╔┤╩П с┤Ес┤А╩Пs...с░ФсйЪ**",
           " **тА╗ ╩Я╔к╔┤с┤Л ╔кs ╔к╔┤ ╩Щ╔кс┤П, с┤Ыс┤П с┤Кс┤П╔к╔┤ ╔┤с┤Пс┤б...с░ФсйЪ**",
           " **тА╗ ╩Ьс┤Ас┤Е ╥Ус┤Ь╔┤...с░ФсйЪ**",
           " **тА╗ с┤Ес┤П ╩Пс┤Пс┤Ь с┤Л╔┤с┤Пс┤б с┤Ы╩Ьс┤З с┤Пс┤б╔┤с┤З╩А с┤П╥У с┤Ы╩Ь╔кs ╔в╩Ас┤Пс┤Ьс┤Ш...с░ФсйЪ**",
           " **тА╗ с┤Ес┤П ╩Пс┤Пс┤Ь с┤Зс┤ас┤З╩А ╩Ас┤Зс┤Нс┤Зс┤Н╩Щс┤З╩А с┤Нс┤З...с░ФсйЪ**",
           " **тА╗ ╩Яс┤Зс┤Ы's с┤Шс┤А╩Ас┤Ы╩П...с░ФсйЪ**",
           " **тА╗ ╩Ьс┤Пс┤б с┤Дс┤Пс┤Нс┤З с┤Ыс┤Пс┤Ес┤А╩П...с░ФсйЪ**",
           " **тА╗ ╩Я╔кsс┤Ыс┤З╔┤ с┤Нс┤З...с░ФсйЪ**",
           " **тА╗ ╩Ьс┤Пс┤б с┤бс┤Аs ╩Пс┤Пс┤Ь╩А с┤Ес┤А╩П...с░ФсйЪ**",
           " **тА╗ с┤Е╔кс┤Е ╩Пс┤Пс┤Ь sс┤Зс┤З...с░ФсйЪ**",
           " **тА╗ с┤А╩Ас┤З ╩Пс┤Пс┤Ь с┤Ы╩Ьс┤З с┤Ас┤Ес┤Н╔к╔┤ ╩Ьс┤З╩Ас┤З...с░ФсйЪ**",
           " **тА╗ с┤А╩Ас┤З ╩Пс┤Пс┤Ь ╔к╔┤ ╩Ас┤З╩Яс┤Ас┤Ы╔кс┤П╔┤s╩Ь╔кс┤Ш...с░ФсйЪ**",
           " **тА╗ с┤А╔┤с┤Е ╩Ьс┤Пс┤б ╔кs с┤Ы╩Ьс┤З с┤Ш╩А╔кsс┤П╔┤с┤З╩А...с░ФсйЪ**",
           " **тА╗ sс┤Ас┤б ╩Пс┤Пс┤Ь ╩Пс┤Зsс┤Ыс┤З╩Ас┤Ес┤А╩П...с░ФсйЪ**",
           " **тА╗ с┤б╩Ьс┤З╩Ас┤З с┤А╩Ас┤З ╩Пс┤Пс┤Ь ╥У╩Ас┤Пс┤Н...с░ФсйЪ**",
           " **тА╗ с┤А╩Ас┤З ╩Пс┤Пс┤Ь с┤П╔┤╩Я╔к╔┤с┤З...с░ФсйЪ**",
           " **тА╗ с┤б╩Ьс┤Ас┤Ы с┤Ес┤П ╩Пс┤Пс┤Ь ╩Я╔кс┤Лс┤З с┤Ыс┤П с┤Зс┤Ас┤Ы...с░ФсйЪ**",
           " **тА╗ с┤Ас┤Ес┤Е с┤Нс┤З с┤Ыс┤П ╩Пс┤Пс┤Ь╩А ╔в╩Ас┤Пс┤Ьс┤Ш, ╔к с┤б╔к╩Я╩Я с┤Ш╩Яс┤А╩П с┤Нс┤Ьs╔кс┤Д с┤А╔┤с┤Е с┤Ыс┤А╔в с┤Зс┤ас┤З╩А╩Пс┤П╔┤с┤З...с░ФсйЪ**",
           " **тА╗ с┤б╔к╩Я╩Я ╩Пс┤Пс┤Ь с┤Ш╩Яс┤А╩П с┤Ы╩Ас┤Ьс┤Ы╩Ь с┤А╔┤с┤Е с┤Ес┤А╩Ас┤З...с░ФсйЪ**",
           " **тА╗ с┤б╩Ьс┤Ас┤Ыs ╩Ьс┤Ас┤Шс┤Шс┤З╔┤с┤Зс┤Е с┤Ыс┤П ╩Пс┤Пс┤Ь...с░ФсйЪ**",
           " **тА╗ с┤Ес┤П ╩Пс┤Пс┤Ь с┤бс┤А╔┤╔┤с┤А с┤Зс┤Ас┤Ы с┤Д╩Ьс┤Пс┤Дс┤П╩Яс┤Ас┤Ыс┤З...с░ФсйЪ**",
           " **тА╗ ╩Ьс┤З╩Я╩Яс┤П ╩Щс┤А╩Щ╩П...с░ФсйЪ**",
           " **тА╗ с┤Ес┤П с┤Д╩Ьс┤Ас┤Ыс┤Ы╔к╔┤╔в с┤б╔кс┤Ы╩Ь с┤Нс┤З...с░ФсйЪ**",
           " **тА╗ с┤б╩Ьс┤Ас┤Ы с┤Ес┤П ╩Пс┤Пс┤Ь sс┤А╩П...с░ФсйЪ**",
           " **тА╗ ╔в╔кс┤ас┤З с┤Нс┤З ╩Пс┤Пс┤Ь╩А с┤б╩Ьс┤Ас┤Ыsс┤Ас┤Шс┤Ш ╔┤с┤Ьс┤Н╩Щс┤З╩А с┤Ш╩Яс┤Зс┤Аsс┤З...с░ФсйЪ**"
           ]

VC_TAG = [
    " **тЪШ рд╣рдордХреЗ рднреБрд▓рд╛ рдЬрдЗрдмреВ...ЁЯТе**",
    " **тЪШ рд╣рдо рддреЛрд╣рд░рд╛ рд╕реЗ рдореЛрд╣рдмреНрдмрдд рдирдЗрдЦреАрдВ рдХрд░рдд...ЁЯТе**",
    " **тЪШ рдПрдХрд░рд╛ рдХреЗ рдЖрдкрди рдмрдирд╛ рд▓, рдкрд┐рдпрд╛...ЁЯТе**",
    " **тЪШ рд╣рдорд░рд╛ рдЧреНрд░реБрдк рдореЗрдВ рдЬреЙрдЗрди рдХрд░ рд▓...ЁЯТе**",
    " **тЪШ рддреЛрд╣рд╛рд░ рдирд╛рдо рджрд┐рд▓ рдореЗрдВ рд▓рд┐рдЦрдиреА рд╣...ЁЯТе**",
    " **тЪШ рддреЛрд╣рд╛рд░ рд╕рдЧрд░реА рд╕рдВрдЧреА рдХрд╣рд╛рдВ рдмрд╛ рд▓реЛрдЧ...ЁЯТе**",
    " **тЪШ рдХреЗрд╣реВ рдХреЗ рдпрд╛рдж рдореЗрдВ рдЦреЛ рдЧрдЗрд▓ рдмрд╛рдбрд╝реВ рдХрд╛...ЁЯТе**",
    " **тЪШ рддреЛрд╣рд╛рд░ рдХрд╛рдо рдХрд╡рди рд╣...ЁЯТе**",
    " **тЪШ рдХрд╣рд╛рдВ рд░рд╣реЗрд▓реВ рддреВ...ЁЯТе**",
    " **тЪШ рд╢реБрдн рдкреНрд░рднрд╛рдд, рдмрд╛рдмреВ...ЁЯТе**",
    " **тЪШ рд╢реБрдн рд░рд╛рддреНрд░реА, рдмрд╣реБрдд рджреЗрд░ рд╣реЛ рдЧрдЗрд▓...ЁЯТе**",
    " **тЪШ рдЖрдЬ рд╣рдорд╛рд░ рдорди рдмрдбрд╝рд╛ рдЦрд░рд╛рдм рдмрд╛...ЁЯТе**",
    " **тЪШ рд╣рдорд╕реЗ рднреА рдмрддрд┐рдпрд╛ рд▓...ЁЯТе**",
    " **тЪШ рдЖрдЬ рд░рд╛рдд рдХреЗ рдЦрд╛рдП рдореЗрдВ рдХрд╛ рдмрдирд▓ рдмрд╛...ЁЯТе**",
    " **тЪШ рдХрд╛ рд╣реЛ рд░рд╣рд▓ рдмрд╛...ЁЯТе**",
    " **тЪШ рддреВ рдореИрд╕реЗрдЬ рдХрд╛рд╣реЗ рдирдЗрдЦ рджреЗрдд...ЁЯТе**",
    " **тЪШ рд╣рдо рдмреЗрдХрд╕реВрд░ рдмрд╛рдиреА...ЁЯТе**",
    " **тЪШ рдХрд╛рд▓ рдордЬрд╛ рдЖрдЗрд▓ рдирд╛...ЁЯТе**",
    " **тЪШ рддреВ рдХрд╛рд▓ рдХрд╣рд╛рдВ рдмрд┐рдЬреА рд░рд╣рд▓реЗ...ЁЯТе**",
    " **тЪШ рддреВ рдХрд╡рдиреЛ рд░рд┐рд▓реЗрд╢рди рдореЗрдВ рдмрд╛рдбрд╝реВ рдХрд╛...ЁЯТе**",
    " **тЪШ рддреВ рдмрд╣реБрдд рд╢рд╛рдВрдд рд░рд╣реЗрд▓реВ, рджреЛрд╕реНрдд...ЁЯТе**",
    " **тЪШ рддреВ рдЧрд╛рдирд╛ рдЧрд╛ рд╕рдХрддрд╛рдбрд╝реВ рдХрд╛...ЁЯТе**",
    " **тЪШ рд╣рдорд░рд╛ рд╕рдВрдЧ рдШреВрдореЗ рдЪрд▓рдмреВ рдХрд╛...ЁЯТе**",
    " **тЪШ рд╕рджрд╛ рдореБрд╕реНрдХреБрд░рд╛ рдХреЗ рд░рд╣s, рджреЛрд╕реНрдд...ЁЯТе**",
    " **тЪШ рд╣рдордиреА рдХреЗ рджреЛрд╕реНрдд рдмрди рд╕рдХреАрд▓рд╛ рдХрд╛...ЁЯТе**",
    " **тЪШ рддреВ рдмрд┐рдпрд╛рд╣рд▓ рдмрд╛рдбрд╝реВ рдХрд╛...ЁЯТе**",
    " **тЪШ рдПрддрдирд╛ рджрд┐рди рдХрд╣рд╛рдВ рдЧрд╛рдпрдм рд░рд╣рд▓реЗ...ЁЯТе**",
    " **тЪШ рд▓рд┐рдВрдХ рдмрд╛рдпреЛ рдореЗрдВ рдмрд╛, рдЕрдм рдЬреЙрдЗрди рдХрд░...ЁЯТе**",
    " **тЪШ рдордЬрд╛рдХ рдХрдЗрдиреА...ЁЯТе**",
    " **тЪШ рддреВ рдЧреНрд░реБрдк рдХреЗ рдорд╛рд▓рд┐рдХ рдХреЗ рдЬрд╛рдирддрд╛рдбрд╝реВ рдХрд╛...ЁЯТе**",
    " **тЪШ рддреВ рдХрдмреЛ рд╣рдордХреЗ рдпрд╛рдж рдХрд░реЗрд▓реВ рдХрд╛...ЁЯТе**",
    " **тЪШ рдЪрд▓ рдкрд╛рд░реНрдЯреА рдХрд░реАрд▓реЗрдВ...ЁЯТе**",
    " **тЪШ рдЖрдЬ рдХреЗ рджрд┐рди рдХрдЗрд╕рди рдЧрдЗрд▓...ЁЯТе**",
    " **тЪШ рддреЛрд╣рд╛рд░ рджрд┐рди рдХрдЗрд╕рди рдЧрдЗрд▓...ЁЯТе**",
    " **тЪШ рддреВ рджреЗрдЦрд▓реЗ рдмрд╛ рдХрд╛...ЁЯТе**",
    " **тЪШ рддреВ рдП рдЧреНрд░реБрдк рдХреЗ рдПрдбрдорд┐рди рдмрд╛рдбрд╝реВ рдХрд╛...ЁЯТе**",
    " **тЪШ рд╣рдордиреА рдХреЗ рджреЛрд╕реНрдд рдмрди рд╕рдХреАрд▓рд╛...ЁЯТе**",
    " **тЪШ рддреВ рд░рд┐рд▓реЗрд╢рдирд╢рд┐рдк рдореЗрдВ рдмрд╛рдбрд╝реВ рдХрд╛...ЁЯТе**",
    " **тЪШ рдЕрд░реБ рдХреИрджреА рдХрдЗрд╕рди рдмрд╛...ЁЯТе**",
    " **тЪШ рдХрд╛рд▓ рд╣рдо рддреЛрд╣рдХреЗ рджреЗрдЦрдиреА...ЁЯТе**",
    " **тЪШ рддреВ рдХрд╣рд╛рдВ рдХреЗ рдмрд╛рдбрд╝реВ...ЁЯТе**",
    " **тЪШ рддреВ рдСрдирд▓рд╛рдЗрди рдмрд╛рдбрд╝реВ рдХрд╛...ЁЯТе**",
    " **тЪШ рддреВ рд╣рдорд╛рд░ рджреЛрд╕реНрдд рдмрд╛рдбрд╝реВ рдХрд╛....ЁЯТе**",
    " **тЪШ рддреВ рдХрд╛ рдЦрд╛рдП рдХреЗ рдкрд╕рдВрдж рдХрд░реЗрд▓реВ...ЁЯТе**",
    " **тЪШ рд╣рдордХреЗ рдЖрдкрди рдЧреНрд░реБрдк рдореЗрдВ рдРрдб рдХрд░рд╛, рд╣рдо рдЧрд╛рдирд╛ рдмрдЬрд╛рдЗрдм рдЖ рд╕рдмрдХреЗ рдЯреЗрдЧ рдХрд░рдм....ЁЯТе**",
    " **тЪШ рдЖрдЬ рд╣рдо рджреБрдЦреА рдмрд╛рдиреА...ЁЯТе**",
    " **тЪШ рддреВ рдЯреНрд░реБрде рдПрдВрдб рдбреЗрдпрд░ рдЦреЗрд▓рдмреВ рдХрд╛...ЁЯТе**",
    " **тЪШ рддреЛрд╣рд╛рд░ рдЬрдЗрд╕рди рджреЛрд╕реНрдд рд╣реЛрдЦрд▓рд╛ рд╕реЗ рдХрд╛ рдбрд░...ЁЯТе**",
    " **тЪШ рдХрд╛ рднрдЗрд▓ рддреЛрд╣рдХреЗ...ЁЯТе**",
    " **тЪШ рддреВ рдЪреЙрдХрд▓реЗрдЯ рдЦрдЗрдмреВ рдХрд╛....ЁЯТе**",
    " **тЪШ рд╣реЗрд▓реЛ рдмрд╛рдмреВ...ЁЯТе**",
    " **тЪШ рд╣рдорд╕реЗ рдмрд╛рдд рдХрд░s...ЁЯТе**",
    " **тЪШ рддреВ рдХрд╛ рдХрд╣рддрд╛рдбрд╝реВ...ЁЯТе**"
]


@app.on_message(filters.command(["entag", "englishtag" ], prefixes=["/", "@", "#"]))
async def mentionall(client, message):
    chat_id = message.chat.id
    if message.chat.type == ChatType.PRIVATE:
        return await message.reply("тмд с┤Ы╩Ь╔кs с┤Дс┤Пс┤Нс┤Нс┤А╔┤с┤Е с┤П╔┤╩Я╩П ╥Ус┤П╩А ╔в╩Ас┤Пс┤Ьс┤Шs.")

    is_admin = False
    try:
        participant = await client.get_chat_member(chat_id, message.from_user.id)
    except UserNotParticipant:
        is_admin = False
    else:
        if participant.status in (
            ChatMemberStatus.ADMINISTRATOR,
            ChatMemberStatus.OWNER
        ):
            is_admin = True
    if not is_admin:
        return await message.reply("тмд ╩Пс┤Пс┤Ь с┤А╩Ас┤З ╔┤с┤Пс┤Ы с┤Ас┤Ес┤Н╔к╔┤ ╩Щс┤А╩Щ╩П, с┤П╔┤╩Я╩П с┤Ас┤Ес┤Н╔к╔┤s с┤Дс┤А╔┤ с┤Ыс┤А╔в с┤Нс┤Зс┤Н╩Щс┤З╩Аs. ")

    if message.reply_to_message and message.text:
        return await message.reply("тмд /entag ╩Ас┤Зс┤Ш╩Я╩П с┤А╔┤╩П с┤Нс┤Зssс┤А╔вс┤З ╔┤с┤Зxс┤Ы с┤Ы╔кс┤Нс┤З ╩Щс┤Пс┤Ы с┤Ыс┤А╔в╔в╔к╔┤╔в...")
    elif message.text:
        mode = "text_on_cmd"
        msg = message.text
    elif message.reply_to_message:
        mode = "text_on_reply"
        msg = message.reply_to_message
        if not msg:
            return await message.reply("тмд /entag ╩Ас┤Зс┤Ш╩Я╩П с┤А╔┤╩П с┤Нс┤Зssс┤А╔вс┤З ╔┤с┤Зxс┤Ы с┤Ы╔кс┤Нс┤З ╥Ус┤Пс┤Ы с┤Ыс┤А╔в╔в╔к╔┤╔в...")
    else:
        return await message.reply("тмд /entag ╩Ас┤Зс┤Ш╩Я╩П с┤А╔┤╩П с┤Нс┤Зssс┤А╔вс┤З ╔┤с┤Зxс┤Ы с┤Ы╔кс┤Нс┤З ╩Щс┤Пс┤Ы с┤Ыс┤А╔в╔в╔к╔┤╔в...")
    if chat_id in spam_chats:
        return await message.reply("тмд с┤Ш╩Яс┤Зс┤Аsс┤З с┤Ас┤Ы ╥У╔к╩Аsс┤Ы sс┤Ыс┤Пс┤Ш ╩Ас┤Ь╔┤╔┤╔к╔┤╔в с┤Нс┤З╔┤с┤Ы╔кс┤П╔┤ с┤Ш╩Ас┤Пс┤Дс┤Зss...")
    spam_chats.append(chat_id)
    usrnum = 0
    usrtxt = ""
    async for usr in client.get_chat_members(chat_id):
        if not chat_id in spam_chats:
            break
        if usr.user.is_bot:
            continue
        usrnum += 1
        usrtxt += f"[{usr.user.first_name}](tg://user?id={usr.user.id}) "

        if usrnum == 1:
            if mode == "text_on_cmd":
                txt = f"{usrtxt} {random.choice(TAGMES)}"
                await client.send_message(chat_id, txt)
            elif mode == "text_on_reply":
                await msg.reply(f"[{random.choice(EMOJI)}](tg://user?id={usr.user.id})")
            await asyncio.sleep(4)
            usrnum = 0
            usrtxt = ""
    try:
        spam_chats.remove(chat_id)
    except:
        pass


@app.on_message(filters.command(["bhtag"], prefixes=["/", "@", "#"]))
async def mention_allvc(client, message):
    chat_id = message.chat.id
    if message.chat.type == ChatType.PRIVATE:
        return await message.reply("тмд с┤Ы╩Ь╔кs с┤Дс┤Пс┤Нс┤Нс┤А╔┤с┤Е с┤П╔┤╩Я╩П ╥Ус┤П╩А ╔в╩Ас┤Пс┤Ьс┤Шs.")

    is_admin = False
    try:
        participant = await client.get_chat_member(chat_id, message.from_user.id)
    except UserNotParticipant:
        is_admin = False
    else:
        if participant.status in (
            ChatMemberStatus.ADMINISTRATOR,
            ChatMemberStatus.OWNER
        ):
            is_admin = True
    if not is_admin:
        return await message.reply("тмд ╩Пс┤Пс┤Ь с┤А╩Ас┤З ╔┤с┤Пс┤Ы с┤Ас┤Ес┤Н╔к╔┤ ╩Щс┤А╩Щ╩П, с┤П╔┤╩Я╩П с┤Ас┤Ес┤Н╔к╔┤s с┤Дс┤А╔┤ с┤Ыс┤А╔в с┤Нс┤Зс┤Н╩Щс┤З╩Аs. ")
    if chat_id in spam_chats:
        return await message.reply("тмд с┤Ш╩Яс┤Зс┤Аsс┤З с┤Ас┤Ы ╥У╔к╩Аsс┤Ы sс┤Ыс┤Пс┤Ш ╩Ас┤Ь╔┤╔┤╔к╔┤╔в с┤Нс┤З╔┤с┤Ы╔кс┤П╔┤ с┤Ш╩Ас┤Пс┤Дс┤Зss...")
    spam_chats.append(chat_id)
    usrnum = 0
    usrtxt = ""
    async for usr in client.get_chat_members(chat_id):
        if not chat_id in spam_chats:
            break
        if usr.user.is_bot:
            continue
        usrnum += 1
        usrtxt += f"[{usr.user.first_name}](tg://user?id={usr.user.id}) "

        if usrnum == 1:
            txt = f"{usrtxt} {random.choice(VC_TAG)}"
            await client.send_message(chat_id, txt)
            await asyncio.sleep(4)
            usrnum = 0
            usrtxt = ""
    try:
        spam_chats.remove(chat_id)
    except:
        pass



@app.on_message(filters.command(["enstop", "bhstop"]))
async def cancel_spam(client, message):
    if not message.chat.id in spam_chats:
        return await message.reply("тмд с┤Дс┤Ь╩А╩Ас┤З╔┤с┤Ы╩Я╩П ╔к'с┤Н ╔┤с┤Пс┤Ы с┤Ыс┤А╔в╔в╔к╔┤╔в ╩Щс┤А╩Щ╩П.")
    is_admin = False
    try:
        participant = await client.get_chat_member(message.chat.id, message.from_user.id)
    except UserNotParticipant:
        is_admin = False
    else:
        if participant.status in (
            ChatMemberStatus.ADMINISTRATOR,
            ChatMemberStatus.OWNER
        ):
            is_admin = True
    if not is_admin:
        return await message.reply("тмд ╩Пс┤Пс┤Ь с┤А╩Ас┤З ╔┤с┤Пс┤Ы с┤Ас┤Ес┤Н╔к╔┤ ╩Щс┤А╩Щ╩П, с┤П╔┤╩Я╩П с┤Ас┤Ес┤Н╔к╔┤s с┤Дс┤А╔┤ с┤Ыс┤А╔в с┤Нс┤Зс┤Н╩Щс┤З╩Аs.")
    else:
        try:
            spam_chats.remove(message.chat.id)
        except:
            pass
        return await message.reply("тЩея╕О с┤Ыс┤А╔в sс┤Ыс┤Пс┤Шс┤Шс┤Зс┤Е.")
